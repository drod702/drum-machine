{"version":3,"sources":["drumpadData.js","App.js","reportWebVitals.js","index.js"],"names":["drumpadData","innerText","id","unicode","audioLink","App","props","state","displayText","updateDisplay","bind","clearDisplay","message","duration","this","setState","setTimeout","className","map","drumpad","Component","Drumpad","handleClick","audio","play","currentTime","handleKeyDown","e","keyCode","document","addEventListener","window","focus","removeEventListener","onClick","onKeyDown","ref","src","Display","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3054c7aa.chunk.js","sourcesContent":["const drumpadData = [\n    {\n        innerText: \"Q\",\n        id:\"Cymbal-Crash\",\n        unicode: 81,\n        audioLink:\"http://www.percussionclinic.com/sounds/instrumentclips/chinacymbal.mp3\"\n    },\n    {\n        innerText: \"W\",\n        id:\"Hi-Hat\",\n        unicode: 87,\n        audioLink:\"http://www.denhaku.com/r_box/sr16/sr16hat/sweethat.wav\"\n    },\n    {\n        innerText: \"E\",\n        id:\"Cymbal-Ride\",\n        unicode: 69,\n        audioLink:\"http://dight310.byu.edu/media/audio/FreeLoops.com/1/1/909%20Ride%2003-5850-Free-Loops.com.mp3\"\n    },\n    {\n        innerText: \"A\",\n        id:\"Rimshot\",\n        unicode: 65,\n        audioLink:\"http://www.randomthink.net/labs/html5drums/drumkit/Rimshot.mp3\"\n    },\n    {\n        innerText: \"S\",\n        id:\"Snare-1\",\n        unicode: 83,\n        audioLink:\"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/REAL%20LIVE%20KITS/Pearl%20Real%20Kit/101[kb]pearlkit-snare1.wav.mp3\"\n    },\n    {\n        innerText: \"D\",\n        id:\"Snare-2\",\n        unicode: 68,\n        audioLink:\"http://www.denhaku.com/r_box/sr16/sr16sd/batterrm.wav\"\n    },\n    {\n        innerText: \"Z\",\n        id:\"Tom-Tom-1\",\n        unicode: 90,\n        audioLink:\"http://www.denhaku.com/r_box/sr16/sr16tom/locan%20hl.wav\"\n    },\n    {\n        innerText: \"X\",\n        id:\"Tom-Tom-2\",\n        unicode: 88,\n        audioLink:\"http://tipiwiki.free.fr/snd/Tamtam2.wav\"\n    },\n    {\n        innerText: \"C\",\n        id:\"Bass Drum\",\n        unicode: 67,\n        audioLink:\"http://dight310.byu.edu/media/audio/FreeLoops.com/1/1/Bass%20Drum%20Free%20002-1659-Free-Loops.com.mp3\"\n    }\n]\n\nexport default drumpadData","import React, { Component } from \"react\";\nimport \"./index.css\";\nimport drumpadData from \"./drumpadData\";\n\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            displayText: 'Click a button or Press a key'\n        }\n        this.updateDisplay = this.updateDisplay.bind(this)\n        this.clearDisplay = this.clearDisplay.bind(this)\n    }\n\n    updateDisplay(message, duration) {\n        this.setState({\n            displayText: message\n        })\n        setTimeout(()=>this.clearDisplay(), duration)\n    }\n    clearDisplay() {\n        this.setState({\n            displayText: ' '\n        })\n    }\n\n    render() {\n        return (\n            <div id=\"container-sm myContainer\" className=\"text-center\">\n                <div id=\"drum-machine\">\n                    <h1>A Simple Drum Machine</h1>\n                    <h2>drod702</h2>\n                    <Display displayText={this.state.displayText}/>\n                    {drumpadData.map( drumpad =>\n                        <Drumpad key={drumpad.id} drumpad={drumpad}\n                        updateDisplay={this.updateDisplay}/>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nclass Drumpad extends Component {\n    constructor(props) {\n        super(props)\n        this.handleClick = this.handleClick.bind(this)\n        this.handleKeyDown = this.handleKeyDown.bind(this)\n    }\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyDown)\n        window.focus()\n    }\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyDown)\n    }\n    handleClick = () => {\n        this.audio.play()\n        this.audio.currentTime = 0\n        this.props.updateDisplay(this.props.drumpad.id, 2000)\n\n    }\n\n    handleKeyDown = (e) => {\n        if(e.keyCode === this.props.drumpad.unicode) {\n            this.audio.play()\n            this.audio.currentTime = 0\n            this.props.updateDisplay(this.props.drumpad.id, 2000)\n        }\n    }\n\n    render() {\n\n        return (\n                <button\n                    id={this.props.drumpad.id}\n                    className=\"button drum-pad\"\n                    onClick={this.handleClick}\n                    onKeyDown={this.handleKeyDown}>\n                    {this.props.drumpad.innerText}\n                        <audio\n                            ref={ref => this.audio = ref}\n                            id={this.props.drumpad.innerText}\n                            className=\"clip\"\n                            src={this.props.drumpad.audioLink}>\n                        </audio>\n                </button>\n        )\n    }\n}\n\nclass Display extends Component {\n    render() {\n        return (\n            <div id=\"display\" className=\"well\">\n                <h2>{this.props.displayText}</h2>\n            </div>\n        )\n    }\n}\n\n\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}